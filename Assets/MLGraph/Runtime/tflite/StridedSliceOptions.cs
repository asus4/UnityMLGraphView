// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct StridedSliceOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static StridedSliceOptions GetRootAsStridedSliceOptions(ByteBuffer _bb) { return GetRootAsStridedSliceOptions(_bb, new StridedSliceOptions()); }
  public static StridedSliceOptions GetRootAsStridedSliceOptions(ByteBuffer _bb, StridedSliceOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public StridedSliceOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int BeginMask { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EndMask { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EllipsisMask { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NewAxisMask { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShrinkAxisMask { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<tflite.StridedSliceOptions> CreateStridedSliceOptions(FlatBufferBuilder builder,
      int begin_mask = 0,
      int end_mask = 0,
      int ellipsis_mask = 0,
      int new_axis_mask = 0,
      int shrink_axis_mask = 0) {
    builder.StartTable(5);
    StridedSliceOptions.AddShrinkAxisMask(builder, shrink_axis_mask);
    StridedSliceOptions.AddNewAxisMask(builder, new_axis_mask);
    StridedSliceOptions.AddEllipsisMask(builder, ellipsis_mask);
    StridedSliceOptions.AddEndMask(builder, end_mask);
    StridedSliceOptions.AddBeginMask(builder, begin_mask);
    return StridedSliceOptions.EndStridedSliceOptions(builder);
  }

  public static void StartStridedSliceOptions(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddBeginMask(FlatBufferBuilder builder, int beginMask) { builder.AddInt(0, beginMask, 0); }
  public static void AddEndMask(FlatBufferBuilder builder, int endMask) { builder.AddInt(1, endMask, 0); }
  public static void AddEllipsisMask(FlatBufferBuilder builder, int ellipsisMask) { builder.AddInt(2, ellipsisMask, 0); }
  public static void AddNewAxisMask(FlatBufferBuilder builder, int newAxisMask) { builder.AddInt(3, newAxisMask, 0); }
  public static void AddShrinkAxisMask(FlatBufferBuilder builder, int shrinkAxisMask) { builder.AddInt(4, shrinkAxisMask, 0); }
  public static Offset<tflite.StridedSliceOptions> EndStridedSliceOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.StridedSliceOptions>(o);
  }
};


}
