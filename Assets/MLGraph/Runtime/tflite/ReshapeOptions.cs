// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct ReshapeOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static ReshapeOptions GetRootAsReshapeOptions(ByteBuffer _bb) { return GetRootAsReshapeOptions(_bb, new ReshapeOptions()); }
  public static ReshapeOptions GetRootAsReshapeOptions(ByteBuffer _bb, ReshapeOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ReshapeOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int NewShape(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int NewShapeLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetNewShapeBytes() { return __p.__vector_as_span<int>(4, 4); }
#else
  public ArraySegment<byte>? GetNewShapeBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public int[] GetNewShapeArray() { return __p.__vector_as_array<int>(4); }

  public static Offset<tflite.ReshapeOptions> CreateReshapeOptions(FlatBufferBuilder builder,
      VectorOffset new_shapeOffset = default(VectorOffset)) {
    builder.StartTable(1);
    ReshapeOptions.AddNewShape(builder, new_shapeOffset);
    return ReshapeOptions.EndReshapeOptions(builder);
  }

  public static void StartReshapeOptions(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddNewShape(FlatBufferBuilder builder, VectorOffset newShapeOffset) { builder.AddOffset(0, newShapeOffset.Value, 0); }
  public static VectorOffset CreateNewShapeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateNewShapeVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartNewShapeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<tflite.ReshapeOptions> EndReshapeOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.ReshapeOptions>(o);
  }
};


}
