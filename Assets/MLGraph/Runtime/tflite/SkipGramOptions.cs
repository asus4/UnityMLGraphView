// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct SkipGramOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static SkipGramOptions GetRootAsSkipGramOptions(ByteBuffer _bb) { return GetRootAsSkipGramOptions(_bb, new SkipGramOptions()); }
  public static SkipGramOptions GetRootAsSkipGramOptions(ByteBuffer _bb, SkipGramOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SkipGramOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int NgramSize { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxSkipSize { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IncludeAllNgrams { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<tflite.SkipGramOptions> CreateSkipGramOptions(FlatBufferBuilder builder,
      int ngram_size = 0,
      int max_skip_size = 0,
      bool include_all_ngrams = false) {
    builder.StartTable(3);
    SkipGramOptions.AddMaxSkipSize(builder, max_skip_size);
    SkipGramOptions.AddNgramSize(builder, ngram_size);
    SkipGramOptions.AddIncludeAllNgrams(builder, include_all_ngrams);
    return SkipGramOptions.EndSkipGramOptions(builder);
  }

  public static void StartSkipGramOptions(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddNgramSize(FlatBufferBuilder builder, int ngramSize) { builder.AddInt(0, ngramSize, 0); }
  public static void AddMaxSkipSize(FlatBufferBuilder builder, int maxSkipSize) { builder.AddInt(1, maxSkipSize, 0); }
  public static void AddIncludeAllNgrams(FlatBufferBuilder builder, bool includeAllNgrams) { builder.AddBool(2, includeAllNgrams, false); }
  public static Offset<tflite.SkipGramOptions> EndSkipGramOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.SkipGramOptions>(o);
  }
};


}
