// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct SparseToDenseOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static SparseToDenseOptions GetRootAsSparseToDenseOptions(ByteBuffer _bb) { return GetRootAsSparseToDenseOptions(_bb, new SparseToDenseOptions()); }
  public static SparseToDenseOptions GetRootAsSparseToDenseOptions(ByteBuffer _bb, SparseToDenseOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SparseToDenseOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool ValidateIndices { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<tflite.SparseToDenseOptions> CreateSparseToDenseOptions(FlatBufferBuilder builder,
      bool validate_indices = false) {
    builder.StartTable(1);
    SparseToDenseOptions.AddValidateIndices(builder, validate_indices);
    return SparseToDenseOptions.EndSparseToDenseOptions(builder);
  }

  public static void StartSparseToDenseOptions(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddValidateIndices(FlatBufferBuilder builder, bool validateIndices) { builder.AddBool(0, validateIndices, false); }
  public static Offset<tflite.SparseToDenseOptions> EndSparseToDenseOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.SparseToDenseOptions>(o);
  }
};


}
