// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct DepthToSpaceOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static DepthToSpaceOptions GetRootAsDepthToSpaceOptions(ByteBuffer _bb) { return GetRootAsDepthToSpaceOptions(_bb, new DepthToSpaceOptions()); }
  public static DepthToSpaceOptions GetRootAsDepthToSpaceOptions(ByteBuffer _bb, DepthToSpaceOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DepthToSpaceOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int BlockSize { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<tflite.DepthToSpaceOptions> CreateDepthToSpaceOptions(FlatBufferBuilder builder,
      int block_size = 0) {
    builder.StartTable(1);
    DepthToSpaceOptions.AddBlockSize(builder, block_size);
    return DepthToSpaceOptions.EndDepthToSpaceOptions(builder);
  }

  public static void StartDepthToSpaceOptions(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddBlockSize(FlatBufferBuilder builder, int blockSize) { builder.AddInt(0, blockSize, 0); }
  public static Offset<tflite.DepthToSpaceOptions> EndDepthToSpaceOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.DepthToSpaceOptions>(o);
  }
};


}
