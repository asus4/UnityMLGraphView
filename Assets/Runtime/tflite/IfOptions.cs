// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct IfOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static IfOptions GetRootAsIfOptions(ByteBuffer _bb) { return GetRootAsIfOptions(_bb, new IfOptions()); }
  public static IfOptions GetRootAsIfOptions(ByteBuffer _bb, IfOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public IfOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ThenSubgraphIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ElseSubgraphIndex { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<tflite.IfOptions> CreateIfOptions(FlatBufferBuilder builder,
      int then_subgraph_index = 0,
      int else_subgraph_index = 0) {
    builder.StartTable(2);
    IfOptions.AddElseSubgraphIndex(builder, else_subgraph_index);
    IfOptions.AddThenSubgraphIndex(builder, then_subgraph_index);
    return IfOptions.EndIfOptions(builder);
  }

  public static void StartIfOptions(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddThenSubgraphIndex(FlatBufferBuilder builder, int thenSubgraphIndex) { builder.AddInt(0, thenSubgraphIndex, 0); }
  public static void AddElseSubgraphIndex(FlatBufferBuilder builder, int elseSubgraphIndex) { builder.AddInt(1, elseSubgraphIndex, 0); }
  public static Offset<tflite.IfOptions> EndIfOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.IfOptions>(o);
  }
};


}
