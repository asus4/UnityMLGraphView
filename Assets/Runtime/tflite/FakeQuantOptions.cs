// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct FakeQuantOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static FakeQuantOptions GetRootAsFakeQuantOptions(ByteBuffer _bb) { return GetRootAsFakeQuantOptions(_bb, new FakeQuantOptions()); }
  public static FakeQuantOptions GetRootAsFakeQuantOptions(ByteBuffer _bb, FakeQuantOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FakeQuantOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Min { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Max { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int NumBits { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool NarrowRange { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<tflite.FakeQuantOptions> CreateFakeQuantOptions(FlatBufferBuilder builder,
      float min = 0.0f,
      float max = 0.0f,
      int num_bits = 0,
      bool narrow_range = false) {
    builder.StartTable(4);
    FakeQuantOptions.AddNumBits(builder, num_bits);
    FakeQuantOptions.AddMax(builder, max);
    FakeQuantOptions.AddMin(builder, min);
    FakeQuantOptions.AddNarrowRange(builder, narrow_range);
    return FakeQuantOptions.EndFakeQuantOptions(builder);
  }

  public static void StartFakeQuantOptions(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddMin(FlatBufferBuilder builder, float min) { builder.AddFloat(0, min, 0.0f); }
  public static void AddMax(FlatBufferBuilder builder, float max) { builder.AddFloat(1, max, 0.0f); }
  public static void AddNumBits(FlatBufferBuilder builder, int numBits) { builder.AddInt(2, numBits, 0); }
  public static void AddNarrowRange(FlatBufferBuilder builder, bool narrowRange) { builder.AddBool(3, narrowRange, false); }
  public static Offset<tflite.FakeQuantOptions> EndFakeQuantOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.FakeQuantOptions>(o);
  }
};


}
