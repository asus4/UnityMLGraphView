// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct SVDFOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static SVDFOptions GetRootAsSVDFOptions(ByteBuffer _bb) { return GetRootAsSVDFOptions(_bb, new SVDFOptions()); }
  public static SVDFOptions GetRootAsSVDFOptions(ByteBuffer _bb, SVDFOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SVDFOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Rank { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public tflite.ActivationFunctionType FusedActivationFunction { get { int o = __p.__offset(6); return o != 0 ? (tflite.ActivationFunctionType)__p.bb.GetSbyte(o + __p.bb_pos) : tflite.ActivationFunctionType.NONE; } }

  public static Offset<tflite.SVDFOptions> CreateSVDFOptions(FlatBufferBuilder builder,
      int rank = 0,
      tflite.ActivationFunctionType fused_activation_function = tflite.ActivationFunctionType.NONE) {
    builder.StartTable(2);
    SVDFOptions.AddRank(builder, rank);
    SVDFOptions.AddFusedActivationFunction(builder, fused_activation_function);
    return SVDFOptions.EndSVDFOptions(builder);
  }

  public static void StartSVDFOptions(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRank(FlatBufferBuilder builder, int rank) { builder.AddInt(0, rank, 0); }
  public static void AddFusedActivationFunction(FlatBufferBuilder builder, tflite.ActivationFunctionType fusedActivationFunction) { builder.AddSbyte(1, (sbyte)fusedActivationFunction, 0); }
  public static Offset<tflite.SVDFOptions> EndSVDFOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.SVDFOptions>(o);
  }
};


}
