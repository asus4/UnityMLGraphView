// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct ReducerOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static ReducerOptions GetRootAsReducerOptions(ByteBuffer _bb) { return GetRootAsReducerOptions(_bb, new ReducerOptions()); }
  public static ReducerOptions GetRootAsReducerOptions(ByteBuffer _bb, ReducerOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ReducerOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool KeepDims { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<tflite.ReducerOptions> CreateReducerOptions(FlatBufferBuilder builder,
      bool keep_dims = false) {
    builder.StartTable(1);
    ReducerOptions.AddKeepDims(builder, keep_dims);
    return ReducerOptions.EndReducerOptions(builder);
  }

  public static void StartReducerOptions(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddKeepDims(FlatBufferBuilder builder, bool keepDims) { builder.AddBool(0, keepDims, false); }
  public static Offset<tflite.ReducerOptions> EndReducerOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.ReducerOptions>(o);
  }
};


}
