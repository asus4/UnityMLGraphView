// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace tflite
{

using global::System;
using global::FlatBuffers;

public struct SplitOptions : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static SplitOptions GetRootAsSplitOptions(ByteBuffer _bb) { return GetRootAsSplitOptions(_bb, new SplitOptions()); }
  public static SplitOptions GetRootAsSplitOptions(ByteBuffer _bb, SplitOptions obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SplitOptions __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int NumSplits { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<tflite.SplitOptions> CreateSplitOptions(FlatBufferBuilder builder,
      int num_splits = 0) {
    builder.StartTable(1);
    SplitOptions.AddNumSplits(builder, num_splits);
    return SplitOptions.EndSplitOptions(builder);
  }

  public static void StartSplitOptions(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddNumSplits(FlatBufferBuilder builder, int numSplits) { builder.AddInt(0, numSplits, 0); }
  public static Offset<tflite.SplitOptions> EndSplitOptions(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<tflite.SplitOptions>(o);
  }
};


}
